#! /bin/bash
#: Name             : Duy Le-Dinh
#: Student Number   : 1403722
#: Description      : Exercise 4, Lab 3

## Funtion to calculate Age
function _calculate_age() {
  ## Get current day, month and year
  local curday=$( date +%d )
  local curmonth=$( date +%m )
  local curyear=$( date +%Y )

  _CALCULATE_AGE=$(( $curyear - $3 ))

  if [ $3 -eq $curyear ]
  then
    _CALCULATE_AGE=0
    return 0
  fi

  ## Check for month and day
  [ $2 -eq $curmonth ] && [ $1 -gt $curday ] && _CALCULATE_AGE=$(( _CALCULATE_AGE - 1 )) ||
  [ $2 -gt $curmonth ] && _CALCULATE_AGE=$(( _CALCULATE_AGE -1 ))
}

## Function to check for valid day, month and year
function _valid_date() {
  ## Check for valid year and compare with current date
  if [[ "$3" =~ ^*[!0-9]*$ ]] || [ "$3" -gt $( date +%Y ) ]
  then
    return 1

  elif [ "$3" -eq $( date +%Y ) ]
  then
    [ "$2" -gt $( date +%m ) ] && return 1 ||
    [ "$2" -eq $( date +%m ) ] && [ "$1" -gt $( date +%d ) ] && return 1
  fi

  ## Check for valid day and month
  [ $1 -gt 0 ] && [ $2 -le 12 ] &&
  if [[ "$2" =~ ^0?2$ ]]
  then
    [ "$1" -lt 29 ] && return 0 || return 1

  elif [[ "$2" =~ ^0?[4,6,9]|11$ ]]
  then
    [ "$1" -le 30 ] && return 0 || return 1

  elif [[ "$2" =~ ^0?[1,3,5,7,8]|10|12$ ]]
  then
    [ "$1" -le 31 ] && return 0 || return 1
  fi || return 1
}

## MAIN
## Check if user has input enough parameters
if [ $# -lt 3 ]
then
  printf "You are not providing parameter. Hint: [dd][mm][year]\n" >&2
  exit 1
else
  _valid_date $1 $2 $3 &&
    _calculate_age $1 $2 $3 && printf "Your age is %d\n" "$_CALCULATE_AGE" ||
       printf "Input Error, try again.\n" >&2
fi
